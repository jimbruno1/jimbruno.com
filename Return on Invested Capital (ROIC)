#Code by Jim Bruno
#jimbruno.com

!pip install yfinance
import numpy as np
import pandas as pd
import yfinance as yf

counter = 0

def ROIC(ticker, taxRate, goodWill):

  roic = pd.DataFrame(np.array([[ticker, 0, 0, 0, 0, 0, 0, 0, 0]]),
                   columns=['Ticker', 'STDebt', 'LTDebt', 'shareholderEquity', 'CashEq', 'Goodwill', 'investedCapital', 'NOPAT', 'ROIC'])
  stocks = yf.Ticker(ticker)

  stock_df = pd.DataFrame(stocks.financials)
  stock_balance = pd.DataFrame(stocks.balance_sheet)
  roic.loc[counter]['STDebt'] = stock_balance.loc['Short Long Term Debt'][0]
  roic.loc[counter]['LTDebt'] = stock_balance.loc['Long Term Debt'][0]
  roic.loc[counter]['shareholderEquity'] = stock_balance.loc['Total Stockholder Equity'][0]
  roic.loc[counter]['CashEq'] = stock_balance.loc['Cash'][0]
  roic.loc[counter]['GoodWill'] = goodWill
  roic.loc[counter]['investedCapital'] = roic.loc[counter]['STDebt'] + roic.loc[counter]['LTDebt'] + roic.loc[counter]['shareholderEquity']
  roic.loc[counter]['NOPAT'] = stock_df.loc['Operating Income'][0] * (1-taxRate)
  roic.loc[counter]['ROIC'] = float(roic.loc[counter]['NOPAT']) / float(roic.loc[counter]['investedCapital'])
  return roic


with pd.option_context('display.max_rows', None, 'display.max_columns', None):  # more options can be specified also
    print(ROIC('AAPL', .133, 0))
